var delay=function(millis){var promise=new Parse.Promise;return setTimeout(function(){promise.resolve()},millis),promise};Parse.Object.prototype.refresh=function(){var promise=new Parse.Promise;return this.fetch({success:function(updatedObject){promise.resolve(updatedObject)},error:function(oldObject,error){promise.reject(error)}}),promise},Parse.Object.prototype.setUserACL=function(user,opts){this.setACL(new Parse.ACL(user)),opts&&opts.saveImmediately&&this.save()},Parse.User.prototype.refresh=function(){var promise=new Parse.Promise;return""===this.getName()?promise=Parse.Object.prototype.refresh.call(this):promise.resolve(this),promise},Parse.User.prototype.afterLogin=function(){},Parse.User.prototype.getCachedRelation=function(key){var obj;return this._cachedRelations&&(obj=this._cachedRelations[key]),obj},Parse.User.prototype.cacheRelation=function(key,value){this._cachedRelations||(this._cachedRelations={}),this._cachedRelations[key]=value},Parse.User.prototype.getName=function(){var name="",firstName=this.get("firstName"),lastName=this.get("lastName");return"undefined"!=typeof firstName&&(name+=firstName,"undefined"!=typeof lastName&&(name+=" ")),"undefined"!=typeof lastName&&(name+=lastName),name},Parse.User.prototype.getFbImageUrl=function(width,height){width="undefined"==typeof width?60:width,height=width;var imgUrl="//graph.facebook.com/"+this.get("fbId")+"/picture?width="+width+"&height="+height;return imgUrl},Parse.User.prototype.getFbImage=function(width,height){var name=this.getName(),imgUrl=this.getFbImageUrl(width,height),imgHtml='<img src="'+imgUrl+'" alt="'+name+'" title="'+name+'" />';return imgHtml},Parse.User.prototype.getAddress=function(){var address=this.get("address");return address},Parse.User.prototype.updateWithGraphUser=function(callback){_Y.log("updateWithGraphUser");var parseUser=this,promise=new Parse.Promise;return FB.api("/me",function(fbUser){_Y.log(fbUser);var fbId=fbUser.id,firstName=fbUser.first_name,lastName=fbUser.last_name,email=fbUser.email,fbUrl=fbUser.link,data={fbId:fbId,firstName:firstName,lastName:lastName,email:email,fbUrl:fbUrl,fbUser:fbUser};parseUser.save(data).then(function(updatedUser){_Y.log(updatedUser.get("firstName")),"function"==typeof callback&&callback(updatedUser),promise.resolve(updatedUser)})}),promise},Parse.User.prototype.updateCloseFacebookFriends=function(){_Y.log("Parse.User.prototype.updateCloseFacebookFriends");var parseUser=this,promise=new Parse.Promise;return FB.api("/me/friends?limit=2000",function(response){var friends=response.data,friendIds=_.map(friends,"id");promise.resolve(friendIds),parseUser.set("fbFriends",friendIds),parseUser.save()}),promise},Parse.User.prototype.markLocationOnMap=function(googleMap,preciseLocation){_Y.log("User.markLocationOnMap");var marker=null,geoPoint=preciseLocation.get("location");if(geoPoint){var location=new google.maps.LatLng(geoPoint.latitude,geoPoint.longitude),iconSize=60,icon={url:this.getFbImageUrl(iconSize),size:new google.maps.Size(iconSize,iconSize),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(0,iconSize),scaledSize:new google.maps.Size(iconSize,iconSize)};marker=new google.maps.Marker({map:googleMap,icon:icon,title:this.getName(),draggable:!1,animation:google.maps.Animation.DROP,position:location})}return marker},Parse.User.prototype.getCoarseLocation=function(){_Y.log("User.getCoarseLocation");var promise=new Parse.Promise,coarseLocation=this.get("coarseLocation");if(coarseLocation)coarseLocation.refresh().then(function(coarseLocation){promise.resolve(coarseLocation)});else{coarseLocation=new UserCoarseLocation,coarseLocation.set("user",this);var data={coarseLocation:coarseLocation};this.save(data).then(function(){promise.resolve(coarseLocation)})}return promise},Parse.User.prototype.getPreciseLocation=function(){_Y.log("User.getPreciseLocation");var preciseLocation=this.get("preciseLocation");if(!preciseLocation){preciseLocation=new UserPreciseLocation,preciseLocation.set("user",this);var data={preciseLocation:preciseLocation};this.save(data)}return preciseLocation},Parse.User.prototype.updateLocation=function(location){if(_Y.log("User.updateLocation"),location){var geocoderResult=location.geocoderResult;location.address=geocoderResult.formatted_address;var addressComponents=geocoderResult.address_components,extractedAddressComponents=extractAddressComponents(addressComponents);location=_.merge(location,extractedAddressComponents),UserCoarseLocation.updateForUser(this,location),UserPreciseLocation.updateForUser(this,location)}},Parse.User.prototype.getFriends=function(){_Y.log("Parse.User.prototype.getFriends");var promise=new Parse.Promise,fbFriends=this.get("fbFriends");if(fbFriends){var query=new Parse.Query(Parse.User);query.containedIn("fbId",fbFriends),query.find({success:function(fbParseFriends){_Y.log("Successfully retrieved Facebook friends"),promise.resolve(fbParseFriends)}})}return promise};var UserCoarseLocation=Parse.Object.extend("UserCoarseLocation",{update:function(location){_Y.log("UserCoarseLocation.update");var result=null,data={city:location.city,state:location.state};return result=this.save(data)},initialize:function(){}},{createForUser:function(user,callback){var coarseLocation=new UserCoarseLocation;coarseLocation.setUserACL(user),coarseLocation.set("user",user),"function"==typeof callback&&callback(coarseLocation);var data={coarseLocation:coarseLocation};return user.save(data),coarseLocation},getForUser:function(user,callback){var promise=new Parse.Promise,coarseLocation=user.get("coarseLocation");return coarseLocation?coarseLocation.refresh().then(function(coarseLocation){"function"==typeof callback&&callback(coarseLocation),promise.resolve(coarseLocation)},function(){coarseLocation=UserCoarseLocation.createForUser(user,callback),promise.resolve(coarseLocation)}):(coarseLocation=UserCoarseLocation.createForUser(user,callback),promise.resolve(coarseLocation)),promise},updateForUser:function(user,location){location.city&&location.state&&UserCoarseLocation.getForUser(user,function(coarseLocation){coarseLocation&&coarseLocation.update(location)})}}),UserPreciseLocation=Parse.Object.extend("UserPreciseLocation",{getLatLngString:function(readable){var latlng,geoPoint=this.get("location");return geoPoint&&(latlng=readable?geoPoint.latitude.toFixed(5)+", "+geoPoint.longitude.toFixed(5):geoPoint.latitude+","+geoPoint.longitude),latlng},update:function(location){_Y.log("UserPreciseLocation.update");var point=new Parse.GeoPoint({latitude:location.latitude,longitude:location.longitude}),keysToOmit=["latitude","longitude","geocoderResult"],data=_.omit(location,function(value,key){var shouldOmit=_.includes(keysToOmit,key);return shouldOmit});data.location=point;var promise=this.save(data);return promise},initialize:function(){}},{createForUser:function(user,callback){var preciseLocation=new UserPreciseLocation;preciseLocation.setUserACL(user),preciseLocation.set("user",user),_Y.log("created"),"function"==typeof callback&&(_Y.log("called back"),callback(preciseLocation));var data={preciseLocation:preciseLocation};return user.save(data),preciseLocation},getForUser:function(user,callback){var promise=new Parse.Promise,preciseLocation=user.get("preciseLocation");return preciseLocation?preciseLocation.refresh().then(function(preciseLocation){"function"==typeof callback&&callback(preciseLocation),promise.resolve(preciseLocation)},function(){preciseLocation=UserPreciseLocation.createForUser(user,callback),promise.resolve(preciseLocation)}):(preciseLocation=UserPreciseLocation.createForUser(user,callback),promise.resolve(preciseLocation)),promise},updateForUser:function(user,location){UserPreciseLocation.getForUser(user,function(preciseLocation){preciseLocation&&preciseLocation.update(location)})}}),UserPrivateData=Parse.Object.extend("UserPrivateData"),UserPublicProfile=Parse.Object.extend("UserPublicProfile");